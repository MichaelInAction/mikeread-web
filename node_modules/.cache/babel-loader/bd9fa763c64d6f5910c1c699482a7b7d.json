{"ast":null,"code":"var _jsxFileName = \"/home/michael/Documents/Personal Projects/React/my-website/src/AutoType/AutoType.js\";\nimport React from 'react';\n\nclass AutoType extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      before: props.before,\n      typedWords: props.typedWords,\n      after: props.after,\n      current: '',\n      deleting: false,\n      period: 2000,\n      loopNum: 0\n    };\n    this.updateText();\n  }\n\n  render() {\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, this.state.before, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, this.state.current), this.state.after);\n  }\n\n  updateText() {\n    var i = this.state.loopNum % this.state.typedWords.length;\n    var fullText = this.state.typedWords[i];\n\n    if (this.state.deleting) {\n      this.setState({\n        current: fullText.substring(0, this.state.current.length - 1)\n      });\n    } else {\n      this.setState({\n        current: fullText.substring(0, this.state.current.length + 1)\n      });\n    }\n\n    var delta = 200 - Math.random() * 100;\n\n    if (this.state.deleting) {\n      delta /= 2;\n    }\n\n    if (!this.state.deleting && this.state.current === fullText) {\n      delta = this.state.period;\n      this.setState({\n        deleting: true\n      });\n    } else if (this.state.deleting && this.state.current === '') {\n      this.setState({\n        deleting: false,\n        loopNum: this.state.loopNum + 1\n      });\n      delta = 500;\n    }\n\n    let that = this;\n    setTimeout(function () {\n      that.updateText();\n    }, delta);\n  }\n\n}\n\nexport default AutoType;","map":{"version":3,"sources":["/home/michael/Documents/Personal Projects/React/my-website/src/AutoType/AutoType.js"],"names":["React","AutoType","Component","constructor","props","state","before","typedWords","after","current","deleting","period","loopNum","updateText","render","i","length","fullText","setState","substring","delta","Math","random","that","setTimeout"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAN,SAAuBD,KAAK,CAACE,SAA7B,CAAuC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAEF,KAAK,CAACE,MADH;AAEXC,MAAAA,UAAU,EAAEH,KAAK,CAACG,UAFP;AAGXC,MAAAA,KAAK,EAAEJ,KAAK,CAACI,KAHF;AAIXC,MAAAA,OAAO,EAAE,EAJE;AAKXC,MAAAA,QAAQ,EAAE,KALC;AAMXC,MAAAA,MAAM,EAAE,IANG;AAOXC,MAAAA,OAAO,EAAE;AAPE,KAAb;AASA,SAAKC,UAAL;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKT,KAAL,CAAWC,MAAf,EAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKD,KAAL,CAAWI,OAAf,CAAtB,EAAkD,KAAKJ,KAAL,CAAWG,KAA7D,CAAP;AACD;;AAEDK,EAAAA,UAAU,GAAG;AACX,QAAIE,CAAC,GAAG,KAAKV,KAAL,CAAWO,OAAX,GAAqB,KAAKP,KAAL,CAAWE,UAAX,CAAsBS,MAAnD;AACA,QAAIC,QAAQ,GAAG,KAAKZ,KAAL,CAAWE,UAAX,CAAsBQ,CAAtB,CAAf;;AAEA,QAAG,KAAKV,KAAL,CAAWK,QAAd,EAAwB;AACtB,WAAKQ,QAAL,CAAc;AAACT,QAAAA,OAAO,EAAEQ,QAAQ,CAACE,SAAT,CAAmB,CAAnB,EAAsB,KAAKd,KAAL,CAAWI,OAAX,CAAmBO,MAAnB,GAA4B,CAAlD;AAAV,OAAd;AACD,KAFD,MAEO;AACL,WAAKE,QAAL,CAAc;AAACT,QAAAA,OAAO,EAAEQ,QAAQ,CAACE,SAAT,CAAmB,CAAnB,EAAsB,KAAKd,KAAL,CAAWI,OAAX,CAAmBO,MAAnB,GAA4B,CAAlD;AAAV,OAAd;AACD;;AACD,QAAII,KAAK,GAAG,MAAMC,IAAI,CAACC,MAAL,KAAgB,GAAlC;;AACA,QAAI,KAAKjB,KAAL,CAAWK,QAAf,EAAyB;AACvBU,MAAAA,KAAK,IAAI,CAAT;AACD;;AACD,QAAI,CAAC,KAAKf,KAAL,CAAWK,QAAZ,IAAwB,KAAKL,KAAL,CAAWI,OAAX,KAAuBQ,QAAnD,EAA6D;AAC3DG,MAAAA,KAAK,GAAG,KAAKf,KAAL,CAAWM,MAAnB;AACA,WAAKO,QAAL,CAAc;AAACR,QAAAA,QAAQ,EAAE;AAAX,OAAd;AACD,KAHD,MAGO,IAAI,KAAKL,KAAL,CAAWK,QAAX,IAAuB,KAAKL,KAAL,CAAWI,OAAX,KAAuB,EAAlD,EAAsD;AAC3D,WAAKS,QAAL,CAAc;AAACR,QAAAA,QAAQ,EAAE,KAAX;AAAkBE,QAAAA,OAAO,EAAE,KAAKP,KAAL,CAAWO,OAAX,GAAqB;AAAhD,OAAd;AACAQ,MAAAA,KAAK,GAAG,GAAR;AACD;;AACD,QAAIG,IAAI,GAAG,IAAX;AACAC,IAAAA,UAAU,CAAC,YAAW;AACpBD,MAAAA,IAAI,CAACV,UAAL;AACD,KAFS,EAEPO,KAFO,CAAV;AAGD;;AA3CoC;;AA+CvC,eAAenB,QAAf","sourcesContent":["import React from 'react';\n\nclass AutoType extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      before: props.before,\n      typedWords: props.typedWords,\n      after: props.after,\n      current: '',\n      deleting: false,\n      period: 2000,\n      loopNum: 0\n    };\n    this.updateText();\n  }\n\n  render() {\n    return <p>{this.state.before}<b>{this.state.current}</b>{this.state.after}</p>;\n  }\n\n  updateText() {\n    var i = this.state.loopNum % this.state.typedWords.length;\n    var fullText = this.state.typedWords[i];\n\n    if(this.state.deleting) {\n      this.setState({current: fullText.substring(0, this.state.current.length - 1)});\n    } else {\n      this.setState({current: fullText.substring(0, this.state.current.length + 1)});\n    }\n    var delta = 200 - Math.random() * 100;\n    if (this.state.deleting) {\n      delta /= 2;\n    }\n    if (!this.state.deleting && this.state.current === fullText) {\n      delta = this.state.period;\n      this.setState({deleting: true});\n    } else if (this.state.deleting && this.state.current === '') {\n      this.setState({deleting: false, loopNum: this.state.loopNum + 1});\n      delta = 500;\n    }\n    let that = this;\n    setTimeout(function() {\n      that.updateText()\n    }, delta);\n  }\n\n}\n\nexport default AutoType;\n"]},"metadata":{},"sourceType":"module"}