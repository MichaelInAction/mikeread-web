{"ast":null,"code":"var _jsxFileName = \"/home/michael/Documents/Personal Projects/React/my-website/src/AutoType/AutoType.js\";\n// Take text before and after typing, and the list of things to type\nimport React from 'react';\n\nclass AutoType extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      before: props.before,\n      typedWords: props.typedWords,\n      current: '',\n      after: props.after,\n      deleting: false,\n      period: 2000,\n      loopNum: 0\n    };\n    this.update();\n  }\n\n  render() {\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, this.state.before, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, this.state.current), this.state.after);\n  }\n\n  updateText() {\n    var i = this.state.loopNum % this.state.typedWords.length;\n    var fullText = this.typedWords[i];\n\n    if (this.state.deleting) {\n      this.state.current = fullText.substring(0, this.state.current.length - 1);\n    } else {\n      this.state.current = fullText.substring(0, this.state.current.length + 1);\n    }\n\n    var delta = 200 - Math.random() * 100;\n\n    if (this.state.deleting) {\n      delta /= 2;\n    }\n\n    if (!this.state.deleting && this.state.current === fullText) {\n      delta = this.state.period;\n      this.state.deleting = true;\n    } else if (this.state.deleting && this.state.current === '') {\n      this.state.deleting = false;\n      this.state.loopNum++;\n      delta = 500;\n    }\n\n    setTimeout(function () {\n      this.update();\n    }, delta);\n  }\n\n}\n\nexport default AutoType;","map":{"version":3,"sources":["/home/michael/Documents/Personal Projects/React/my-website/src/AutoType/AutoType.js"],"names":["React","AutoType","Component","constructor","props","state","before","typedWords","current","after","deleting","period","loopNum","update","render","updateText","i","length","fullText","substring","delta","Math","random","setTimeout"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAN,SAAuBD,KAAK,CAACE,SAA7B,CAAuC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAEF,KAAK,CAACE,MADH;AAEXC,MAAAA,UAAU,EAAEH,KAAK,CAACG,UAFP;AAGXC,MAAAA,OAAO,EAAE,EAHE;AAIXC,MAAAA,KAAK,EAAEL,KAAK,CAACK,KAJF;AAKXC,MAAAA,QAAQ,EAAE,KALC;AAMXC,MAAAA,MAAM,EAAE,IANG;AAOXC,MAAAA,OAAO,EAAE;AAPE,KAAb;AASA,SAAKC,MAAL;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKT,KAAL,CAAWC,MAAf,EAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKD,KAAL,CAAWG,OAAf,CAAtB,EAAkD,KAAKH,KAAL,CAAWI,KAA7D,CAAP;AACD;;AAEDM,EAAAA,UAAU,GAAG;AACX,QAAIC,CAAC,GAAG,KAAKX,KAAL,CAAWO,OAAX,GAAqB,KAAKP,KAAL,CAAWE,UAAX,CAAsBU,MAAnD;AACA,QAAIC,QAAQ,GAAG,KAAKX,UAAL,CAAgBS,CAAhB,CAAf;;AAEA,QAAG,KAAKX,KAAL,CAAWK,QAAd,EAAwB;AACtB,WAAKL,KAAL,CAAWG,OAAX,GAAqBU,QAAQ,CAACC,SAAT,CAAmB,CAAnB,EAAsB,KAAKd,KAAL,CAAWG,OAAX,CAAmBS,MAAnB,GAA4B,CAAlD,CAArB;AACD,KAFD,MAEO;AACL,WAAKZ,KAAL,CAAWG,OAAX,GAAqBU,QAAQ,CAACC,SAAT,CAAmB,CAAnB,EAAsB,KAAKd,KAAL,CAAWG,OAAX,CAAmBS,MAAnB,GAA4B,CAAlD,CAArB;AACD;;AACD,QAAIG,KAAK,GAAG,MAAMC,IAAI,CAACC,MAAL,KAAgB,GAAlC;;AACA,QAAI,KAAKjB,KAAL,CAAWK,QAAf,EAAyB;AACvBU,MAAAA,KAAK,IAAI,CAAT;AACD;;AACD,QAAI,CAAC,KAAKf,KAAL,CAAWK,QAAZ,IAAwB,KAAKL,KAAL,CAAWG,OAAX,KAAuBU,QAAnD,EAA6D;AAC3DE,MAAAA,KAAK,GAAG,KAAKf,KAAL,CAAWM,MAAnB;AACA,WAAKN,KAAL,CAAWK,QAAX,GAAsB,IAAtB;AACD,KAHD,MAGO,IAAI,KAAKL,KAAL,CAAWK,QAAX,IAAuB,KAAKL,KAAL,CAAWG,OAAX,KAAuB,EAAlD,EAAsD;AAC3D,WAAKH,KAAL,CAAWK,QAAX,GAAsB,KAAtB;AACA,WAAKL,KAAL,CAAWO,OAAX;AACAQ,MAAAA,KAAK,GAAG,GAAR;AACD;;AACDG,IAAAA,UAAU,CAAC,YAAW;AACpB,WAAKV,MAAL;AACD,KAFS,EAEPO,KAFO,CAAV;AAGD;;AA3CoC;;AA+CvC,eAAenB,QAAf","sourcesContent":["// Take text before and after typing, and the list of things to type\nimport React from 'react';\n\nclass AutoType extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      before: props.before,\n      typedWords: props.typedWords,\n      current: '',\n      after: props.after,\n      deleting: false,\n      period: 2000,\n      loopNum: 0\n    };\n    this.update();\n  }\n\n  render() {\n    return <p>{this.state.before}<b>{this.state.current}</b>{this.state.after}</p>;\n  }\n\n  updateText() {\n    var i = this.state.loopNum % this.state.typedWords.length;\n    var fullText = this.typedWords[i];\n\n    if(this.state.deleting) {\n      this.state.current = fullText.substring(0, this.state.current.length - 1)\n    } else {\n      this.state.current = fullText.substring(0, this.state.current.length + 1)\n    }\n    var delta = 200 - Math.random() * 100;\n    if (this.state.deleting) {\n      delta /= 2;\n    }\n    if (!this.state.deleting && this.state.current === fullText) {\n      delta = this.state.period;\n      this.state.deleting = true;\n    } else if (this.state.deleting && this.state.current === '') {\n      this.state.deleting = false;\n      this.state.loopNum++;\n      delta = 500;\n    }\n    setTimeout(function() {\n      this.update();\n    }, delta);\n  }\n\n}\n\nexport default AutoType;\n"]},"metadata":{},"sourceType":"module"}