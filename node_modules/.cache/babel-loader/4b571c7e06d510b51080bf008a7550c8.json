{"ast":null,"code":"var _jsxFileName = \"/home/michael/Documents/Personal Projects/React/my-website/src/AutoType/AutoType.js\";\n// Take text before and after typing, and the list of things to type\nimport React from 'react';\n\nclass AutoType extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      before: props.before,\n      typedWords: props.typedWords,\n      current: '',\n      after: props.after,\n      deleting: false,\n      period: 2000,\n      loopNum: 0\n    };\n    this.period = parseInt(period, 10) || 2000;\n    this.tick();\n  }\n\n  render() {\n    this.update();\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, this.state.before, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, this.state.current), this.state.after);\n  }\n\n  updateText() {\n    var i = this.state.loopNum % this.state.typedWords.length;\n    var fullText = this.typedWords[i];\n\n    if (this.state.deleting) {\n      this.state.current = fullText.substring(0, this.state.current.length - 1);\n    } else {\n      this.state.current = fullText.substring(0, this.state.current.length + 1);\n    }\n\n    var delta = 200 - Math.random() * 100;\n\n    if (this.state.deleting) {\n      delta /= 2;\n    }\n\n    if (!this.state.deleting && this.state.current === fullText) {\n      delta = this.state.period;\n      this.state.deleting = true;\n    } else if (this.state.deleting && this.state.current === '') {\n      this.state.deleting = false;\n      this.state.loopNum++;\n      delta = 500;\n    }\n\n    setTimeout(function () {\n      this.update();\n    }, delta);\n  }\n\n}\n\nTxtType.prototype.tick = function () {\n  if (!this.isDeleting && this.txt === fullTxt) {\n    delta = this.period;\n    this.isDeleting = true;\n  } else if (this.isDeleting && this.txt === '') {\n    this.isDeleting = false;\n    this.loopNum++;\n    delta = 500;\n  }\n\n  setTimeout(function () {\n    that.tick();\n  }, delta);\n};\n\nwindow.onload = function () {\n  var elements = document.getElementsByClassName('typewrite');\n\n  for (var i = 0; i < elements.length; i++) {\n    var toRotate = elements[i].getAttribute('data-type');\n    var period = elements[i].getAttribute('data-period');\n\n    if (toRotate) {\n      new TxtType(elements[i], JSON.parse(toRotate), period);\n    }\n  } // For Typing Cursor\n  // var css = document.createElement(\"style\");\n  // css.type = \"text/css\";\n  // css.innerHTML = \".typewrite > .wrap { border-right: 0.08em solid #fff}\";\n  // document.body.appendChild(css);\n\n};\n\nexport default AutoType;","map":{"version":3,"sources":["/home/michael/Documents/Personal Projects/React/my-website/src/AutoType/AutoType.js"],"names":["React","AutoType","Component","constructor","props","state","before","typedWords","current","after","deleting","period","loopNum","parseInt","tick","render","update","updateText","i","length","fullText","substring","delta","Math","random","setTimeout","TxtType","prototype","isDeleting","txt","fullTxt","that","window","onload","elements","document","getElementsByClassName","toRotate","getAttribute","JSON","parse"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAN,SAAuBD,KAAK,CAACE,SAA7B,CAAuC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAEF,KAAK,CAACE,MADH;AAEXC,MAAAA,UAAU,EAAEH,KAAK,CAACG,UAFP;AAGXC,MAAAA,OAAO,EAAE,EAHE;AAIXC,MAAAA,KAAK,EAAEL,KAAK,CAACK,KAJF;AAKXC,MAAAA,QAAQ,EAAE,KALC;AAMXC,MAAAA,MAAM,EAAE,IANG;AAOXC,MAAAA,OAAO,EAAE;AAPE,KAAb;AASA,SAAKD,MAAL,GAAcE,QAAQ,CAACF,MAAD,EAAS,EAAT,CAAR,IAAwB,IAAtC;AACA,SAAKG,IAAL;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,SAAKC,MAAL;AACA,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKX,KAAL,CAAWC,MAAf,EAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKD,KAAL,CAAWG,OAAf,CAAtB,EAAkD,KAAKH,KAAL,CAAWI,KAA7D,CAAP;AACD;;AAEDQ,EAAAA,UAAU,GAAG;AACX,QAAIC,CAAC,GAAG,KAAKb,KAAL,CAAWO,OAAX,GAAqB,KAAKP,KAAL,CAAWE,UAAX,CAAsBY,MAAnD;AACA,QAAIC,QAAQ,GAAG,KAAKb,UAAL,CAAgBW,CAAhB,CAAf;;AAEA,QAAG,KAAKb,KAAL,CAAWK,QAAd,EAAwB;AACtB,WAAKL,KAAL,CAAWG,OAAX,GAAqBY,QAAQ,CAACC,SAAT,CAAmB,CAAnB,EAAsB,KAAKhB,KAAL,CAAWG,OAAX,CAAmBW,MAAnB,GAA4B,CAAlD,CAArB;AACD,KAFD,MAEO;AACL,WAAKd,KAAL,CAAWG,OAAX,GAAqBY,QAAQ,CAACC,SAAT,CAAmB,CAAnB,EAAsB,KAAKhB,KAAL,CAAWG,OAAX,CAAmBW,MAAnB,GAA4B,CAAlD,CAArB;AACD;;AACD,QAAIG,KAAK,GAAG,MAAMC,IAAI,CAACC,MAAL,KAAgB,GAAlC;;AACA,QAAI,KAAKnB,KAAL,CAAWK,QAAf,EAAyB;AACvBY,MAAAA,KAAK,IAAI,CAAT;AACD;;AACD,QAAI,CAAC,KAAKjB,KAAL,CAAWK,QAAZ,IAAwB,KAAKL,KAAL,CAAWG,OAAX,KAAuBY,QAAnD,EAA6D;AAC3DE,MAAAA,KAAK,GAAG,KAAKjB,KAAL,CAAWM,MAAnB;AACA,WAAKN,KAAL,CAAWK,QAAX,GAAsB,IAAtB;AACD,KAHD,MAGO,IAAI,KAAKL,KAAL,CAAWK,QAAX,IAAuB,KAAKL,KAAL,CAAWG,OAAX,KAAuB,EAAlD,EAAsD;AAC3D,WAAKH,KAAL,CAAWK,QAAX,GAAsB,KAAtB;AACA,WAAKL,KAAL,CAAWO,OAAX;AACAU,MAAAA,KAAK,GAAG,GAAR;AACD;;AACDG,IAAAA,UAAU,CAAC,YAAW;AACpB,WAAKT,MAAL;AACD,KAFS,EAEPM,KAFO,CAAV;AAGD;;AA7CoC;;AAiDvCI,OAAO,CAACC,SAAR,CAAkBb,IAAlB,GAAyB,YAAW;AAElC,MAAI,CAAC,KAAKc,UAAN,IAAoB,KAAKC,GAAL,KAAaC,OAArC,EAA8C;AAC5CR,IAAAA,KAAK,GAAG,KAAKX,MAAb;AACA,SAAKiB,UAAL,GAAkB,IAAlB;AACD,GAHD,MAGO,IAAI,KAAKA,UAAL,IAAmB,KAAKC,GAAL,KAAa,EAApC,EAAwC;AAC7C,SAAKD,UAAL,GAAkB,KAAlB;AACA,SAAKhB,OAAL;AACAU,IAAAA,KAAK,GAAG,GAAR;AACD;;AAEDG,EAAAA,UAAU,CAAC,YAAW;AACpBM,IAAAA,IAAI,CAACjB,IAAL;AACD,GAFS,EAEPQ,KAFO,CAAV;AAGD,CAdD;;AAgBAU,MAAM,CAACC,MAAP,GAAgB,YAAW;AACzB,MAAIC,QAAQ,GAAGC,QAAQ,CAACC,sBAAT,CAAgC,WAAhC,CAAf;;AACA,OAAK,IAAIlB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgB,QAAQ,CAACf,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACxC,QAAImB,QAAQ,GAAGH,QAAQ,CAAChB,CAAD,CAAR,CAAYoB,YAAZ,CAAyB,WAAzB,CAAf;AACA,QAAI3B,MAAM,GAAGuB,QAAQ,CAAChB,CAAD,CAAR,CAAYoB,YAAZ,CAAyB,aAAzB,CAAb;;AACA,QAAID,QAAJ,EAAc;AACZ,UAAIX,OAAJ,CAAYQ,QAAQ,CAAChB,CAAD,CAApB,EAAyBqB,IAAI,CAACC,KAAL,CAAWH,QAAX,CAAzB,EAA+C1B,MAA/C;AACD;AACF,GARwB,CASzB;AACA;AACA;AACA;AACA;;AACD,CAdD;;AAgBA,eAAeV,QAAf","sourcesContent":["// Take text before and after typing, and the list of things to type\nimport React from 'react';\n\nclass AutoType extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      before: props.before,\n      typedWords: props.typedWords,\n      current: '',\n      after: props.after,\n      deleting: false,\n      period: 2000,\n      loopNum: 0\n    };\n    this.period = parseInt(period, 10) || 2000;\n    this.tick();\n  }\n\n  render() {\n    this.update();\n    return <p>{this.state.before}<b>{this.state.current}</b>{this.state.after}</p>;\n  }\n\n  updateText() {\n    var i = this.state.loopNum % this.state.typedWords.length;\n    var fullText = this.typedWords[i];\n\n    if(this.state.deleting) {\n      this.state.current = fullText.substring(0, this.state.current.length - 1)\n    } else {\n      this.state.current = fullText.substring(0, this.state.current.length + 1)\n    }\n    var delta = 200 - Math.random() * 100;\n    if (this.state.deleting) {\n      delta /= 2;\n    }\n    if (!this.state.deleting && this.state.current === fullText) {\n      delta = this.state.period;\n      this.state.deleting = true;\n    } else if (this.state.deleting && this.state.current === '') {\n      this.state.deleting = false;\n      this.state.loopNum++;\n      delta = 500;\n    }\n    setTimeout(function() {\n      this.update();\n    }, delta);\n  }\n\n}\n\nTxtType.prototype.tick = function() {\n\n  if (!this.isDeleting && this.txt === fullTxt) {\n    delta = this.period;\n    this.isDeleting = true;\n  } else if (this.isDeleting && this.txt === '') {\n    this.isDeleting = false;\n    this.loopNum++;\n    delta = 500;\n  }\n\n  setTimeout(function() {\n    that.tick();\n  }, delta);\n};\n\nwindow.onload = function() {\n  var elements = document.getElementsByClassName('typewrite');\n  for (var i = 0; i < elements.length; i++) {\n    var toRotate = elements[i].getAttribute('data-type');\n    var period = elements[i].getAttribute('data-period');\n    if (toRotate) {\n      new TxtType(elements[i], JSON.parse(toRotate), period);\n    }\n  }\n  // For Typing Cursor\n  // var css = document.createElement(\"style\");\n  // css.type = \"text/css\";\n  // css.innerHTML = \".typewrite > .wrap { border-right: 0.08em solid #fff}\";\n  // document.body.appendChild(css);\n};\n\nexport default AutoType;\n"]},"metadata":{},"sourceType":"module"}